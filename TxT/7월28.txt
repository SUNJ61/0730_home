-유니티의 각도 (평면 좌표에서)
        0

270        90

      180

 -> 해당 각도로 삼각함수를 이용한다.

 예각 : 0도 보다 크고 90도보다 작은 각.
 둔각 : 90도 보다 큰 각

 부채꼴 : r*r*(각도 / 360)파이

-유니티 Editor
 >Editor클래스는 유니티 IDE(비쥬얼 스튜디오 처럼 제작을 도와주는 기능의 모음)를 구성하는 API의 집합이며
  런타임시에 다른 스크립트를 참조할수없고 "씬화면에서 시각적인 부분만 표현"한다.


-라이트 맵핑 및 라이트 프로브(관찰자)
  -RealTime모드 : 실시간 조명으로 설정하는 것으로 씬에 직접 광원을 적용, 매 프레임 조명 연산을 하여 업데이트.
                      연산부하가 크다. 실시간 조명은 직접광원만 사용, 간접광원과는 관계가 없다. 단독으로 사용된다.
                      반사광 효과가 없다, 때문에 실시간 조명으로 생기는 그림자는 검은색으로 생긴다.
  ->Realtime Global lllumination : 실시간 전역 조명기능을 활성화 한다.

  -MixedLight모드 : 중급 정도의 PC 또는 고성능 모바일 디바이스에 적합하다.
  -Baked 모드 : 런타임시 조명처리를 하지 않는 조명이다. 정적인 물체에만 연산처리를 하여 표면의 그림자와 조명을 표시.

  -라이트 맵핑 : 직접, 간접 조명 / 반사광원 등을 텍스처로 bake하는 작업이다. (광원으로 발생하는 효과를 텍스처로 저장)
                    정적인 오브젝트를 관리한다. (동적인 오브젝트는 불가능.)

  -라이트 프로브 : 빛과 광원을 모으고 있다가 적이나 플레이어와 같이 움직이는 물체가 다가 올 때 모아둔 광원을 쏜다. 

  -anchor override : 주변 라이트 프로브로부터 빛이 모이는 위치를 변경하기 위한 것.
                          속성에 원하는 위치를 연결하면 그위치부터 텍스처 색상이 보간이 된다.
==================================================================================
1. 적 캐릭터의 지능화 된 AI
  -아머 박스나, 장애물, 벽뒤에 있을 경우 총을 쏘지 않도록 한다.
   >적 캐릭터의 추적 사정거리와 시야각을 시각적으로 표시, 유니티 Editor가 제동하는 기능을 사용.
     DrawWireDisc와 DrawSolidArc 함수를 이용.

2.라이트 맵핑 및 라이트 프로브
  -라이트 맵핑 사용해보기
  -라이트 프로브 사용해보기

3.에어리어 라이트 사용해보기.

4.씬관리
  -각각 다른 씬에서 만든 것을 하나로 합쳐서 merge 씬을 만든다.

5.서바이벌에서 다시해보기
===================================================================================
1. 적 캐릭터 지능화 (장애물, 벽, 배럴 등 감지)
    -스크립트 2개 추가 (하나는 Editor폴더 만들어서 생성)
    -에너미 ai 스크립트 수정

2.라이트 맵핑 및 라이트 프로브
[라이트 맵핑]
  -윈도우 > 렌더러 > 라이트 탭에서 관리
  -배럴,장애물 원본 모델에 가서, 모델탭 아래에 generate lightmap uvs를 체크. (라이트 맵핑)
  -라이트 맵핑할 정적인 모델을 모두 선택 -> static에서 contribute Gi체크 (라이트 맵핑 허용)
  -라이트 탭에가서 관리, lightmapper를 progressive Cpu택 (Gpu성능이 좋으면 Gpu로 한다.)
  -라이트 탭에 auto generate체크해제 (자동으로 bake를 하여 사용자가 원하는데로 하기 위해 체크 해제)
  -lightmap Resolution 20 (해상도 낮춤), max lightmap size 512
  (씬탭에서 환경탭으로 넘어온다.)
  -환경 조명의 소스를 color로 바꾸고 색을 검정색으로 바꾼다.
  -리얼타임 그림자를 검정색으로 바꾼다.
  -환경 Reflections의 소스를 커스텀으로 바꾼다.
  -intensity Multiple을 0으로 바꾼다 (빛의 반사율)
  (환경탭에서 씬탭으로 넘어온다.)
  -light모드를 subtractive로 바꾼다. (중급 성능용)
  -Directional Light를 disable한다.

  (창을 닫고 에딧탭에 프로젝트 세팅 퀄리티 탭에 픽셀 라이트 카운트를 20으로 바꾼다.)

  -빈오브젝트를 만들고 해당 오브젝트에 라이트를 모은다.
  -해당 오브젝트 밑에 포인트 라이트를 만든다.
  -포인트 라이트를 플레이어 머리위로 옮기고 범위 30, 강도 2, 모드 bake, 그림자 타입 소프트쉐도우, 범위 2 
  -포인트 복사하여 설치후 라이트 관리 탭에가서 bake한다. (제네릭 라이트)
  -만든 포인트 라이트 오브젝트들을 다꺼도 빛이 표현된다.
    >[문제점 : 정적인 물체들은 빛나지만 동적인 물체들은 보이지 않는다.]

[라이트프로브]
  -라이트 프로브를 적용시킬 오브젝트를 담을 빈 오브젝트를 만든다.
  -라이트 프로브 그룹 오브젝트를 생성한다. (플레이어에 가져다 둔다.)
  -라이트 프로브 오브젝트의 에딧 라이트 프로브를 클릭후 광원을 모으고 싶은 위치에 해당 오브젝트를 복사하여 둔다.
  -끈 라이트 포인트를 다시키고 다시 bake
  -플레이어 슬라이드 메쉬에 앵커 오버라이드가 있는데 거기에 플레이어 오브젝트안에 있는 head오브젝트를 넣는다.
   >라이트프로브를 더 잘받을 수 있음.
  -enemy와 swat도 마찬가지로 적용(원본 모델에서 가려둔 헤드 찾아서 표현해줘야함.)

(오브젝트가 bake의 영향을 안받을 수 있음. 쉐이더 문제일 가능성이 큼.)

3. 에어리어 라이트
  -오브젝트에서 만들고, 범위 30 , 폭 40, 높이 1.5
  -이후 다시 bake하기.

4. 협업시 씬관리

  -레벨 디자인 (라이트 맵핑, 라이트 프로브, 맵 오브젝트, AI nav bake등)은 따로 레벨 씬을 만들어야 한다.
  -만든 레벨디자인 씬을 기반으로 다른 씬들을 합친다.
  -새로운 start씬을 만들고 파일-> 빌드세팅에서 두 씬 (레벨씬 배틀필드씬)을 올린다.
  -캔버스를 만들고 아래에 이미지를 만든다. 버튼 2개를 만들고 시작, 종료버튼을 만든다.
  -UI매니저를 통해 씬이동 구현 (로드를 한번에 2씬을 하여 2개의 씬을 합침. 에딧에 빌드세팅의 씬 순서 중요.)