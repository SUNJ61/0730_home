에너미 스크립트
-> 에너미의 AI길찾기 관리, AI상태 관리, 에너미 공격(발사)관리, 에너미가 받는 데미지 관리스크립트(예정)을 사용

LateUpdate : Update함수가 먼저 실행된 후 LateUpdate가 실행된다. 
FixedUpdate : 고정된 프레임으로 코드를 실행, 정확한 물리량을 계산하려고 할 때 사용한다. (Update함수보다 먼저 실행된다.)

IK(Inverse Kinematics) : 역운동학, 해당 부분을 중심으로 애니메이션을 먼저 출력. 현실적인 움직임과 반대되는 움직임.
애니메이터 레이어 설정 weight :1로 설정하는 것은 다른 레이어와 이어서 움직이지 않고 독립적으로 움직이게 하는 설정이다.
                                        해당 레이어는 다른 레이어와 전혀 다른 부위에서 애니메이션을 출력하기에 독립적으로 설정.
                                        0으로 설정하면 다른 레이어와 연속적으로 애니메이션이 발생.
====================================================================================
오늘 할 것

1. 카메라 따라오는 기능 제작

2. 에너미 리로드기능 제작

3. 죽었을 때 Die 애니메이션 3개중 1개 랜덤으로 출력
====================================================================================

1. 카메라 따라오는 기능

  -카메라에 스무스 팔로우 삭제후 스크립트 만들어 저장

2. 에너미 리로드기능

  -애니메이션이 앉아서 리로드, 상체모션만 가져오기(레이어를 분리하여 가져오면 상체 하체애니메이션 분리가능)
   ->아바타 마스크를 만든다.
   ->편집할 모델링의 아바타를 트랜스폼에 넣는다. (해도 되고 안해도 되고?)
   ->아바타를 클릭하여 애니메이션을 남길 부분만 초록색으로 만든다.
   ->에너미 애니메이터에서 새로운 레이어를 만든다. (재장전 모션을 출력할 레이어)
   ->레이어 톱니를 클릭하여 만든 아바타 마스크를 넣는다.
   ->weight 를 1로 설정, 이는 다른 레이어와 이어서 움직이지 않고 독립적으로 움직이게 하는 설정이다.
   ->블렌딩 설정은 오버라이드 -> 따로 재정의 한다라는 뜻 (addtive는 다른 레이어에 추가하여 움직인다라는 뜻.)
   ->만든 레이어에 새로운 state를 만들고 장전 애니메이션을 넣는다.
   ->entry에서 바로 재장전으로 연결되면 너무 빨리 재생되어 빈 state를 하나 넣고 기본 state로 설정 후
      reload state와 노드를 서로 연결한다.
   ->리로드 트리거를 하나 만들고 빈state에서 reload state로 가는 노드에 트리거를 넣는다.

  -애너미 총쏘는 스크립트 수정



  -애너미의 머즐플래쉬는 직접만들어 본다. (모바일용 파티클이다.)
   ->파이어포스 밑에 쿼드 오브젝트 생성
   ->머터리얼을 만들어서 쉐이터를 모바일/파티클/에딧티브 를 선택하고 머즐플래쉬 이미지를 넣는다.
   ->타일링을 0.5/0.5로 세팅.
   ->해당 머터리얼을 아까만든 쿼드 오브젝트 머터리얼에 넣는다.

  -에너미 발사 스크립트 수정


  -총 맞으면 총알 자국 생기기
   ->총알 자국 이펙트 Resources에 넣기
   ->에너미 데미지 스크립트 수정

3.죽었을 때 Die 애니메이션 3개중 1개 랜덤으로 출력

  -에너미 사망 기능 제작

    ->총알 관리 스크립트에서 공공의 데미지 변수선언
    ->에너미 데미지 스크립트에서 데미지 수정


  -에너미 랜덤하게 죽음 동작 실현하기
   ->애니메이터에 sub-state를 생성한다. (부모클래스, 자식클래스와 비슷함.)
   ->sub state에 죽는 모션 2개를 찾아 애니메이터에 올린다.
   ->anystate와 죽는 모션을 연결하고 exit로 마무리한다. (부모 state로 연결하면 밖으로 탈출한다.)
   ->int 파라미터를 생성한다 -> 랜덤으로 값이 정해져 죽음 애니메이션 선택.
   ->die트리거도 만든다.
   ->각각 시작 노드에 die트리거와 Die인트변수를 넣는다. (인트 변수는 각각 다르게 설정, 인덱스 역할)
   ->끝 노드에 모두 die트리거 설정 및 has exit풀기.

   -랜점 죽음 스크립트 제작.



   -에너미 오브젝트 풀링하기.
    ->오브젝트 풀링 스크립트 수정,다양한 곳 수정

4. 애니메이션 속도 조절 및 오프셋 설정

  -애니메이터에 플롯 파라미터 두개 제작
  -walk와 run애니메이션 state를 선택후 멀티플리어 파라미터 체크, 서클 오프셋 체크하고 각각 만든 파라미터 할당.
  -코드 수정
