배열의 할당은 개발자에게 있지만
배열의 참조형 데이터를 더이상 쓰지 않는다면 컴파일러의 가비지 컬렉터(gaboge collector)가 수거한다.

c와 c#은 메모리관리를 개발자가 관리해야한다. (management)
자바와 c#은 메모리관리를 가비지 컬렉터(gaboge collector)가 해준다. (unmanagement)

1차원 배열의 길이 값을 나타내는 것은 Length를 사용한다.
2차원 3차원은 또 다르다.

2차원 배열 형식 int[ , ] arr = new int[3][3];
ㅁㅁㅁ
ㅁㅁㅁ
ㅁㅁㅁ ->이런 공간에 저장 / 2차원 좌표계와 같다.

#주의점 : 2차원 배열의 나타내는 인덱스 값은 int[n , m] : (행렬) n은 열 , m은 행 / (좌표계) n은 y, m은 x 이다.

Rank명령어 : 배열.Rank로 사용 => 해당 배열의 차수를 표현.
GetLength(차수)명령어 : 배열.GetLength(차수)로 사용 => 배열의 해당 차수의 길이를 표현,
Length명령어 : 길이를 표현 -> 3차원 [2,2,2]배열은 길이가 8이다.

가변 배열 : 데이터형식 [ ][ ] 배열이름; 형태로 사용

함수 만들기 -> 함수명(매개변수) 식으로 선언.
매개변수 : 외부로 부터 선언한 자료형에 맞게 데이터를 입력받는다.

함수는 하나의 기능만 가지도록 설계해야한다.
또한 메모지에 저장된 함수의 데이터는 아래서부터 쌓였다가 가장 늦게 들어온 데이터부터 사라진다.

내장함수 : 내부적으로 지원하는 기능의 함수.

클래스
Calculator calculator = new Calculator();
//calculator클래스를 동적할당해서 해당 클래스의 명령어를 사용할 수 있게 한다
WriteLine("Add 함수 호출과 반환 : {0}",calculator.Add(3,4)); <<static 안 붙인 함수

WriteLine("Multi 함수 호출과 반환 : {0}",Calculator.Multi(3,4));  <<static 붙인 함수
//Calculator에서 static을 붙이면 바로 클래스명.매소드로 함수를 호출할 수 있다.
//즉, static은 동적할당으로 미리 해당 함수를 자동으로 호출한다.
//static을 사용하지 않으면 위 Add함수와 같이 동적할당의 과정을 거쳐야한다.