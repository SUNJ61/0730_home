고전 방식을 이용하여 데이터를 물리적으로 저장했음. (요즘 잘 안쓰임.)

유니티에서 지원하는 클래스중  데이터를 저장하기 위해 별도의 클래스를 제공한다.
ScriptableObject 유니티에서 대량의 공유데이터를 저장할 수 있는 클래스로 확장자는 .asset이다.

ScriptableObject클래스는 다음과 같은 특징이 있다.
 -컴퍼넌트가 아니다.
 -일반적인 대부분의 이벤트 함수가 없다. (Start, Awake, Update같은 함수.)
 -다른 게임오브젝트나 프리팹에 추가할 수 없다. (컴퍼넌트로 사용하지 않으니 직접 오브젝트에 넣을 수 없음.)

ScriptableObject클래스를 생성하는 방법
 -메모리에 생성하는 법 : ScriptableObject.CreatInstance<T>();
 -CreatAsset 함수로 생성하는 방법 : AssetDatabase.CreatAsset();
 -어튜리뷰트를 사용해서 자동으로 생성하는 방법 : [CreatAssetMenu(filename = "파일명", menuName = "?", order = 1)]
  >가장 많이 쓰이는 방법이다. (오늘 연습해볼 방법)

ScriptableObject의 활용분야
 -인벤토리의 데이터 저장
 -아이템의 설정 및 발생 빈도 등이 있다.


RaycastHit hit;에 hit변수에 대하여
 -hit.point : 맞은 위치의 월드 좌표값을 벡터3로 가져온다.
 -hit.transform.position (parent) : 맞은 게임오브젝트의 포지션과 부모
 -hit.distance : 발사위치와 맞은 위치 사이의 거리
 -hit.normal : Ray가 맞은 표면의 방향 (법선벡터라고도 불림)
===================================================================================
1. ScriptableObject를 어튜리뷰트를 사용해서 자동으로 생성하는 방법

   -ScriptableObject를 만들 스크립트를 만든다.
   -해당 스크립트를 만든 폴더를 클릭, Assets메뉴의 Creat GameData를 클릭
   -게임매니저스크립트를 수정 ,  GameData컴포넌트에 할당된 데이터를 주석처리
   -GameData컴포넌트에 만들었던 ScriptableObject를 끌어서 넣는다.

2. 레이캐스트로 에너미 탐지하면 마우스를 누르지 않아도 자동으로 총알 발사.
   -firepos와 laserBeam스크립트 수정.
   
   -문제점, 배럴이 앞을 막고있어도 총을 쏜다. 배럴, 장애물이 있으면 총을 쏘지 않도록 수정.

3. 적들 hpbar만들기.

4. 플레이어가 장애물에 가려질 때 카메라가 자동으로 이동하여 시점 다시 잡기.
   -FollowCamera스크립트 수정
===================================================================================
C#

#일반화 프로그래밍, 익명의 메소드, 펑크 액션 쪽지시험.#

람다식(Lambda Expression) => 유니티 컴포넌트도 이런식으로 바꿀 예정 tr =>~~~;
 -람다식또한 익명의 메소드이다. 익명의 메소드를 표현하는 다른 방법.
 -사용 방법 : (매개변수 목록) => return할 식  ex) (int a, int b => a+b;
 -만약 생성한 delegate가 void반환형에 매개변수를 입력하지 않는다면
  DoSomething DoIt = () =>
  {
      WriteLine("뭔가를 ");
      WriteLine("출력 해보자!");
  }; 
  위와 같이 익명의 메소드를 만들 수 있고 DoIt();으로 선언된 함수를 호출 할 수 있다.

 -[Func와 Action]
  익명의 메소드와 무명함수는 코드를 간결하게 해주지만, 별개의 대리자를 따로 선언해주어야 한다.
  하지만 Func와 Action은 대리자 없이 익명의 메소드를 만들수 있다.
  Func는 결과를 반환 하는 익명의 메소드
  Action은 결과를 반환하지 않는 익명의 메소드
  각각 대리자 없이 익명의 메소드를 만들 수 있다.

LINQ(링크)