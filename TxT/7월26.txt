[일정]
tps제작이 끝나면 

1. 자동차 움직여보기
   -WASD를 이용하여
   -AI를 이용하여 스스로 움직이는 자동차
2. 포톤클라우드를 사용해 포톤 네트워크 게임을 만들어본다.

[PlayerPrefs]

해당 클래스에 속한 함수
 - DeleteAll : 모든 키값을 삭제한다.
 - DeleteKey : 특정 키를 삭제한다.
 - Get자료형("Keystring", Value) : Keystring이 없으면 새로 만들고, 값만큼 저장, Keystring이 이미 존재하면 이전의 값을 로드함.
 - HasKey : 해당 키가 존재하는지 확인하는 함수. 
 - Save : 변경된 키값을 물리적인 저장공간에 저장하는 함수.
 - Set자료형("Keystring", Value) : Keystring에 같은 타입의 값을 저장한다.

##단점 : 해당 코드만을 사용할 경우 보안성이 없다. 네트워크 게임에서 쓰려면 암호화 하여 데이터를 저장해야한다.

[바이너리 파일 저장 (이진파일)]

-이진데이터 (고전적인 방법)
 데이터를 저장하는 방식중 물리적인 파일에 데이터를 기록하는 방법.
 데이터를 바이너리 파일에 저장하고 필요한 시점에 로드해 사용할 수 있다. (바이너리파일은 컴퓨터가 읽을 수 있다)

[객체 직렬화(Serialization)]
-객체를 통신이나 파일 또는 메모리에 저장하기위해 일련의 바이트로 변환하는 것을 말한다.
-메모리상에 흩어져 저장된 데이터를 일렬로 재배열해 전송하기 용이한 데이터로 바꾸는것을 말한다.
[객체 역직렬화(DeSerialization)]
-하드디스크에 저장되거나 서버에 저장된 데이터를 실시간으로 알려주기 위해 byte형태의 데이터를
 다시 float int string으로 바꾸어 주는 것을 말한다.

===================================================================================
1. 데이터 저장하기

2. 인벤토리 UI에서 아이템 추가 삭제시 그대로 각종 데이터가 반영
===================================================================================
1. 데이터 저장하기
   -common파일에 datamanager폴더를 만들고 gamedata스크립트를 만든다.
   -스크립트 수정
   -MonoBehaviour을 상속하지 않으면 기능적 요소보다는 데이터적 성격이 강한 클래스이다. 이것을 Entity클래스라 한다.
    즉, 인벤토리 같은 데이터를 저장하는 데이터적 성격이 강한 것들은 이렇게 만든다.

   -ItemInfo 스크립트를 만들어 using DataInfo를 선언, Gamedata에있는 네임스페이스 DataInfo를 사용한다.
   -해당 ItemInfo를 인벤토리 아래에 아이템리스트 아래에 아이템들에게 넣는다.
   -Hp관련 아이템 오브젝트를 선택후 Itemdata아래의 옵션을 사용자에 맞춰 수정한다
    HP, VALUE, HP_UP, Increase+10_HP, 10
   -위와 같이 Speed, grenade, shock아이템을 모두 수정한다.

   -DataManager스크립트를 하나 만든다.
   -using System.IO; // 바이너리 파일 입출력을 위한 네임스페이스를 사용한다.
   -using System.Runtime.Serialization.Formatters.Binary;
    //바이너리 파일 포멧을 실시간으로 직렬화를 사용해 전달하기 위해 사용.
    //직렬화는 코드에서 선언된 자료형들을 byte단위 형식으로 바꾸는 것을 말한다.
    //역직렬화는 byte단위로 저장된 데이터를 다시 코드에서 사용하는 자료형으로 바꾸는 것을 말한다.
   -해당 스크립트를 게임매니저 오브젝트에 넣는다.
   -게임매니저 스크립트에서 데이타매니저 스크립트를 활성화 시켜서 불러온다.
   -기본 경로 확인 가능 C:/Users/YONSAI/AppData/LocalLow/DefaultCompany/0716TPSGame
   -다시 데이타매니저를 수정하여 정보 저장및 불러오기를 하도록한다.

2. 인벤토리 UI에서 아이템 추가 삭제시 그대로 각종 데이터가 반영
    -게임매니저에 코드 추가
    -드랍은 아이템 넣기, 드래그는 아이템빼기 기능
    -해당 스크립트 들에 코드 추가

    -인벤토리에 아이템을 넣은 상태로 껏다 켜도 아이템을 불러오도록 하는 기능
     >게임 매니저에 장착된 아이템 리스트가 0보다 크면 해당 정보를 다시 로드하도록한다.